## Default settings for the simulation### Scenario settingsScenario.name = default_scenarioScenario.simulateConnections = trueScenario.updateInterval = 0.1# 43200s == 12hScenario.endTime = 43200## Interface-specific settings:# type : which interface class the interface belongs to# For different types, the sub-parameters are interface-specific# For SimpleBroadcastInterface, the parameters are:# transmitSpeed : transmit speed of the interface (bytes per second) # transmitRange : range of the interface (meters)# "Bluetooth" interface for all nodesbtInterface.type = SimpleBroadcastInterface# Transmit speed of 2 Mbps = 250kBpsbtInterface.transmitSpeed = 250kbtInterface.transmitRange = 10# High speed, long range, interface for group 4highspeedInterface.type = SimpleBroadcastInterfacehighspeedInterface.transmitSpeed = 10MhighspeedInterface.transmitRange = 1000# Define 6 different node groupsScenario.nrofHostGroups = 6## Group-specific settings:# groupID : Group's identifier. Used as the prefix of host names# nrofHosts: number of hosts in the group# movementModel: movement model of the hosts (valid class name from movement package)# waitTime: minimum and maximum wait times (seconds) after reaching destination# speed: minimum and maximum speeds (m/s) when moving on a path# bufferSize: size of the message buffer (bytes)# router: router used to route messages (valid class name from routing package)# activeTimes: Time intervals when the nodes in the group are active (start1, end1, start2, end2, ...)# msgTtl : TTL (minutes) of the messages created by this host group, default=infinite## Group and movement model specific settings# pois: Points Of Interest indexes and probabilities (poiIndex1, poiProb1, poiIndex2, poiProb2, ... )#       for ShortestPathMapBasedMovement# okMaps : which map nodes are OK for the group (map file indexes), default=all #          for all MapBasedMovent models# routeFile: route's file path - for MapRouteMovement# routeType: route's type - for MapRouteMovement# Common settings for all groupsGroup.movementModel = ShortestPathMapBasedMovementGroup.router = EpidemicRouterGroup.bufferSize = 5MGroup.waitTime = 0, 120Group.nodeList = [nella:0,22,2,13,26,15,6,28,39,19,32/luna:12,24,3,25,5,27,29,7,40,31/via:11,33,35,36,16,38,17,8,20,21/maya:34,1,23,14,4,37,18,9,30,10;nella:22,34,12,35,24,16,38,6,40,20,31/luna:1,3,36,25,37,39,18,29,8,9/via:0,13,14,26,15,5,28,17,32,21/maya:11,33,23,2,4,27,7,19,30,10;nella:11,12,13,2,14,26,4,28,8,9,20/luna:22,33,35,24,36,38,17,29,19,30/via:0,1,23,3,15,16,5,18,7,31/maya:34,25,37,27,6,39,40,10,32,21;nella:0,1,13,3,37,4,26,17,19,30,20/luna:11,23,36,5,27,16,29,18,31,32/via:22,12,2,24,14,38,28,39,8,21/maya:33,34,35,25,15,6,7,9,40,10;nella:33,22,11,34,24,37,38,5,39,19,21/luna:0,1,35,14,36,3,40,20,32,10/via:23,12,27,16,6,17,7,29,30,31/maya:13,2,25,4,26,15,28,18,8,9]# All nodes have the bluetooth interfaceGroup.nrofInterfaces = 1Group.interface1 = btInterface# Walking speedsGroup.speed = 0.5, 1.5# Message TTL of 300 minutes (5 hours)Group.msgTtl = 300Group.nrofHosts = 40# group1 (pedestrians) specific settingsGroup1.groupID = p# group2 specific settingsGroup2.groupID = c# cars can drive only on roadsGroup2.okMaps = 1# 10-50 km/hGroup2.speed = 2.7, 13.9# another group of pedestriansGroup3.groupID = w# The Tram groupsGroup4.groupID = tGroup4.bufferSize = 50MGroup4.movementModel = MapRouteMovementGroup4.routeFile = data/tram3.wktGroup4.routeType = 1Group4.waitTime = 10, 30Group4.speed = 7, 10Group4.nrofHosts = 2Group4.nrofInterfaces = 2Group4.interface1 = btInterfaceGroup4.interface2 = highspeedInterfaceGroup5.groupID = tGroup5.bufferSize = 50MGroup5.movementModel = MapRouteMovementGroup5.routeFile = data/tram4.wktGroup5.routeType = 2Group5.waitTime = 10, 30Group5.speed = 7, 10Group5.nrofHosts = 2Group6.groupID = tGroup6.bufferSize = 50MGroup6.movementModel = MapRouteMovementGroup6.routeFile = data/tram10.wktGroup6.routeType = 2Group6.waitTime = 10, 30Group6.speed = 7, 10Group6.nrofHosts = 2## Message creation parameters # How many event generatorsEvents.nrof = 1# Class of the first event generatorEvents1.class = MessageEventGenerator# (following settings are specific for the MessageEventGenerator class)# Creation interval in seconds (one new message every 25 to 35 seconds)Events1.interval = 25,35# Message sizes (500kB - 1MB)Events1.size = 500k,1M# range of message source/destination addressesEvents1.hosts = 0,125# Message ID prefixEvents1.prefix = M## Movement model settings# seed for movement models' pseudo random number generator (default = 0)MovementModel.rngSeed = 1# World's size for Movement Models without implicit size (width, height; meters)MovementModel.worldSize = 4500, 3400# How long time to move hosts in the world before real simulationMovementModel.warmup = 1000## Map based movement -movement model specific settingsMapBasedMovement.nrofMapFiles = 4MapBasedMovement.mapFile1 = data/roads.wktMapBasedMovement.mapFile2 = data/main_roads.wktMapBasedMovement.mapFile3 = data/pedestrian_paths.wktMapBasedMovement.mapFile4 = data/shops.wkt## Reports - all report names have to be valid report classes# how many reports to loadReport.nrofReports = 1# length of the warm up period (simulated seconds)Report.warmup = 0# default directory of reports (can be overridden per Report with output setting)Report.reportDir = reports/# Report classes to loadReport.report1 = MessageStatsReport#Report.report1 = MessageDrop## Default settings for some routers settingsProphetRouter.secondsInTimeUnit = 30SprayAndWaitRouter.nrofCopies = 6SprayAndWaitRouter.binaryMode = true## Optimization settings -- these affect the speed of the simulation## see World class for details.Optimization.cellSizeMult = 5Optimization.randomizeUpdateOrder = true## GUI settings# GUI underlay image settingsGUI.UnderlayImage.fileName = data/helsinki_underlay.png# Image offset in pixels (x, y)GUI.UnderlayImage.offset = 64, 20# Scaling factor for the imageGUI.UnderlayImage.scale = 4.75# Image rotation (radians)GUI.UnderlayImage.rotate = -0.015# how many events to show in the log panel (default = 30)GUI.EventLogPanel.nrofEvents = 100# Regular Expression log filter (see Pattern-class from the Java API for RE-matching details)#GUI.EventLogPanel.REfilter = .*p[1-9]<->p[1-9]$